<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on d4rkb1ue&#39;s Blog</title>
    <link>https://drkbl.com/tags/linux/</link>
    <description>Recent content in Linux on d4rkb1ue&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Contact me at 7874364@gmail.com</copyright>
    <lastBuildDate>Sun, 19 Jul 2020 03:25:38 -0700</lastBuildDate>
    
	<atom:link href="https://drkbl.com/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Socket Web Server With Multithread in Python</title>
      <link>https://drkbl.com/posts/socket-web-server-with-multithread-in-python/</link>
      <pubDate>Sun, 19 Jul 2020 03:25:38 -0700</pubDate>
      
      <guid>https://drkbl.com/posts/socket-web-server-with-multithread-in-python/</guid>
      <description>Socket in Unix/Linux  Socket in Unix/Linux is just file descriptor, which means you can just treat it as file. Socket exists on the both ends of the communicators as the endpoints. Socket can be full duplex. Since Socket are inherently file, then it has its own buffer for both Reading and Writing. The communication process is like,  Reading data from its reading buffer and write data to its writing buffer When the writing buffer is full(or call flush), the data will be passed to the peer&#39;s reading buffer Peer will refuse to be inputed when full    Socket Server/Client in Python  Server&#39;s serversocket.</description>
    </item>
    
    <item>
      <title>Service Account vs. User Account</title>
      <link>https://drkbl.com/posts/service-account-vs-user-account/</link>
      <pubDate>Mon, 13 Apr 2020 17:16:38 -0700</pubDate>
      
      <guid>https://drkbl.com/posts/service-account-vs-user-account/</guid>
      <description>Firstly, we need to clarify where are we talking at,
 Linux system K8s service orchestration Directory service Services with API  In Linux System User accounts are used by real users, service accounts are used by system services such as web servers, mail transport agents, databases etc. The kernel doesn&#39;t care, besides UID 0.
 By convention, service accounts have user IDs in the low range, e.g. 100-999 or so Service accounts may own specific resources, even device special files, but they don&#39;t have superuser-like privileges Service accounts can be created like ordinary user accounts Service accounts shouldn&#39;t have a login shell, i.</description>
    </item>
    
    <item>
      <title>Linux Uptime Mismatch</title>
      <link>https://drkbl.com/posts/linux-uptime-mismatch/</link>
      <pubDate>Mon, 13 Apr 2020 15:57:05 -0700</pubDate>
      
      <guid>https://drkbl.com/posts/linux-uptime-mismatch/</guid>
      <description>I found sometimes, the outputs of,
last -x reboot who -b uptime -s sudo journalctl --list-boots Are showing different uptime since last booting which is annoying.
An example is,
last -x reboot # wtmp begins Wed Apr 1 10:29:40 2020 &amp;lt;-- this is actually not a reboot time. Explain later who -b # system boot 2020-03-02 19:19 uptime -s # 2020-03-02 19:19:54 sudo journalctl --list-boots # 0 46e3eb28ab51489ab8eb236d65a5086f Mon 2020-04-13 10:51:31 PDT—Mon 2020-04-13 15:46:43 PDT Although this might be a better solution which always tells us the truth,</description>
    </item>
    
    <item>
      <title>Bridge Network in Linux</title>
      <link>https://drkbl.com/posts/bridge-network-in-linux/</link>
      <pubDate>Mon, 24 Feb 2020 05:27:21 -0800</pubDate>
      
      <guid>https://drkbl.com/posts/bridge-network-in-linux/</guid>
      <description>Case We want to combine two physical Network Interfaces(NIC) on a single machine, which,
 shares the same IP address, combines routing tables supporting circuit/swithing for different NICs, &amp;ldquo;extends&amp;rdquo; the upstream network(connected to NIC1) to be used by another device(connected to NIC2), eventually make the machine work tranparently as a network bridge.  Bridge in Linux How Linux handle net bridge in stacks For the Linux Kernel, normal user space processes can only utilize Socket with (IP, port, proto) 3-tuple for Network connection, which means that Kernel only provide L4 network communication interface.</description>
    </item>
    
    <item>
      <title>Time Sync in Linux</title>
      <link>https://drkbl.com/posts/time-sync/</link>
      <pubDate>Fri, 07 Feb 2020 20:22:34 -0800</pubDate>
      
      <guid>https://drkbl.com/posts/time-sync/</guid>
      <description>Case For distribute system, sometimes the datetime on every server in the cluster, or a group of servers need to be synced.
Time on a Ubuntu Server Timekeepers in the System Timekeeper, who hold its own time.
 System time: managed by the Linux kernel RTC: real-time clock, hardware clock on your motherboard CMOS  Should always in the UTC timezone. But there’s nothing in the hardware clock itself says which timezone is used.</description>
    </item>
    
    <item>
      <title>Time Machine On Ubuntu 18 with samba</title>
      <link>https://drkbl.com/posts/ubuntu-18-samba-time-machine/</link>
      <pubDate>Sun, 22 Jul 2018 21:49:46 +0000</pubDate>
      
      <guid>https://drkbl.com/posts/ubuntu-18-samba-time-machine/</guid>
      <description>Play with NAS Chapter 2 - config time machine base on smb at ubuntu 18.04
 Ref: HowTo make time machine backups on a samba fileserver without netatalk : homelab  Install Samba 4.8+ If you install older version of samba, uninstall it,
sudo apt-get remove --purge samba compile prerequisites,
sudo apt-get update sudo apt-get install acl attr autoconf bind9utils bison build-essential debhelper dnsutils docbook-xml docbook-xsl flex gdb libjansson-dev krb5-user \ libacl1-dev libaio-dev libarchive-dev libattr1-dev libblkid-dev libbsd-dev \ libcap-dev libcups2-dev libgnutls28-dev libgpgme11-dev libjson-perl \ libldap2-dev libncurses5-dev libpam0g-dev libparse-yapp-perl \ libpopt-dev libreadline-dev nettle-dev perl perl-modules pkg-config \ python-all-dev python-crypto python-dbg python-dev python-dnspython \ python3-dnspython python-markdown python3-markdown python3-dev xsltproc zlib1g-dev download,</description>
    </item>
    
    <item>
      <title>折腾 Ubuntu 18.04 做 NAS</title>
      <link>https://drkbl.com/posts/using-ubuntu-18-as-nas/</link>
      <pubDate>Sun, 22 Jul 2018 21:11:31 +0000</pubDate>
      
      <guid>https://drkbl.com/posts/using-ubuntu-18-as-nas/</guid>
      <description>一直在用 Deskmini 搭了黑群晖，但是其实用不到群晖的生态系统，索性自己安装个 Ubuntu 还方便自己自由维护使用。
 远程界面 挂载 NTFS 备份 开启 SMB 服务 开启 Time Machine 服务：Time Machine On Ubuntu 18 with samba  远程界面 Ubuntu 没有网页端的 GUI，有时候还是想用界面来操作。不能总连着个显示器。所以用远程桌面替代，可以满足的选择有很多。
 18.04 自带了 vino，如果是 minimal install 需要自行安装， sudo apt-get install vino ssh  重启后进入设置，开启 sharing -&amp;gt; desktop 开启密码。
客户端：VNC Viewer https://www.realvnc.com/
connect by,
192.168.1.110:5900
(your ip ip:5900)
Trouble Shooting encryption 登录失败 如果远程登录因为 encryption 的原因不成功，改一条设置即可，
gsettings set org.gnome.Vino require-encryption false 注意安全，如果不暴露到外网还好。
重启后无法登录 原因很简单，重启后未登录 Gnome 用户的情况下，服务进程还没启动，每次启动后在 Gnome 上登录一次就好了，但是还是很麻烦，每次重启要连一次键盘鼠标很淡疼啊，(ssh 登录没用)，解决办法：</description>
    </item>
    
    <item>
      <title>Unix 正确编译运行多文件 Java</title>
      <link>https://drkbl.com/posts/how-to-run-multi-java-file/</link>
      <pubDate>Mon, 19 Sep 2016 18:38:14 +0000</pubDate>
      
      <guid>https://drkbl.com/posts/how-to-run-multi-java-file/</guid>
      <description>0基础 Java 命令行编译~
目录结构  建立 package 文件夹，如 ~/project/myPackage 在 ~/project/myPackage 下存放多个 java 文件 每个 java 文件除注释外首行应为本 package 名 package myPackage;  编译  在 ~/project 目录下执行 javac myPackage/*.java 编译全部 java 文件  运行  在 ~/project 目录下执行 java myPackage.MainClass 或 java myPackage/MainClass 均可  </description>
    </item>
    
  </channel>
</rss>