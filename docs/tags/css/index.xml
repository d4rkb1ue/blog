<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSS on d4rkb1ue&#39;s Blog</title>
    <link>https://drkbl.com/tags/css/</link>
    <description>Recent content in CSS on d4rkb1ue&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Contact me at 7874364@gmail.com</copyright>
    <lastBuildDate>Thu, 12 May 2016 01:41:14 +0000</lastBuildDate>
    
	<atom:link href="https://drkbl.com/tags/css/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HTML Tabs 标签页的实现方式和对比</title>
      <link>https://drkbl.com/posts/how-to-make-tabs/</link>
      <pubDate>Thu, 12 May 2016 01:41:14 +0000</pubDate>
      
      <guid>https://drkbl.com/posts/how-to-make-tabs/</guid>
      <description>HTML网页里的Tabs的意义是什么？   &amp;lt;div class=&amp;quot;content&amp;quot;&amp;gt; 的显示内容
  &amp;lt;li class=&amp;quot;tab&amp;quot;&amp;gt; 类型的按钮，需要通过例如添加 active 的方式调节选中状态，通过点击，可以修改 div.content 内的内容
  其实可以完全不存在 ul-&amp;gt;div 1对1的关系。其实是点按一个按钮，更改部分位置的html内容
静态Tabs 内容直接保存在 响应的 div HTML 代码中。
  在静态 HTML 网页中，tabs的只需要执行隐藏，显示 &amp;lt;div&amp;gt;
  最好可以通过 /panel#tab* url的方式直接显示为某一个tab
  动态Tabs 如果使用AJAX或者其他异步加载技术，动态的获取 tab 下的内容。
  默认 tab。如果直接调用 /panel 需要显示什么内容。应该直接显示 tab1 下的内容
  未加载内容的加载方式，时机，和加载后的通知
  加载内容的前后端分离
 使用异步获取 HTML 内容？ JSON 内容再动态生成HTML？    已加载内容的删除
 $.hide() 直接 $(&#39;div&#39;).</description>
    </item>
    
    <item>
      <title>使用CSS实现响应式图片不变形裁剪</title>
      <link>https://drkbl.com/posts/css-responsable-image-cut-without-distort/</link>
      <pubDate>Thu, 05 May 2016 21:13:43 +0000</pubDate>
      
      <guid>https://drkbl.com/posts/css-responsable-image-cut-without-distort/</guid>
      <description>思路1. 使用overflow裁剪 大致的思想就是对图片固定高或宽，然后另一个选项为auto. 记得单独设置
max-width: none; 保证图片不会被裁剪/变形. 如果需要让图片居中，就设置
margin-left: -50% 可以让图像向右移动50%即一半啦
完整实例 height:350px; overflow: hidden; max-width: none; margin-left: -50%; 存在的问题 在slider里，在图片滚动的时候会显示出溢出的部分
思路2. 使用 CSS3 特性 object-fit 这个特性碉堡了。 和上面的实例具有相同效果的：
height:350px; object-fit: cover; 设置好宽和高，图片自己就会进行裁剪和居中。
支持性问题  浏览器支持 使用Polyfill来扩展支持的范围  参考   object-fit API @w3c
  用一行 CSS 居中并裁剪图片 @伯乐在线
  更多：判断浏览器是否支持指定CSS属性和指定值
  </description>
    </item>
    
    <item>
      <title>同一行中固定宽度div和响应式宽度div的配合</title>
      <link>https://drkbl.com/posts/dynamic-width-with-inline-block/</link>
      <pubDate>Wed, 04 May 2016 21:43:45 +0000</pubDate>
      
      <guid>https://drkbl.com/posts/dynamic-width-with-inline-block/</guid>
      <description>目标 简单说就是在一行里面希望放置2个 div。
  其中1个固定在一侧，并且具有固定的大小
  另外那个占据这一行剩余的所有空间
  思路1 inline-block   使用 auto 宽度，不可行
  使用百分比，不可行
  使用js检测宽度之后用 $(window).width - fix_another_width - other_padding_or_margin 动态生成宽度，可行，但是一点也不优雅。
  思路2 不要使用inline-block，改为float 对于
&amp;lt;div id=&amp;#34;container&amp;#34;&amp;gt; &amp;lt;div id=&amp;#34;DivB&amp;#34;&amp;gt;b&amp;lt;/div&amp;gt; &amp;lt;div id=&amp;#34;DivA&amp;#34;&amp;gt;a&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; 使用CSS：
#container { /* 这行是stackoverflow给出的答案 */ /* 溢出操作，我觉得没什么必要，一旦溢出也不符合要求，隐藏掉无异于掩耳盗铃 */ overflow: hidden; } #DivA { overflow: hidden; } #DivB { float: right; width: 100px; } 参考 Dynamic width with inline-block @StackOverflow</description>
    </item>
    
    <item>
      <title>廖雪峰 JavaScript 教程-浏览器对象, DOM, 操作表单</title>
      <link>https://drkbl.com/posts/lxf-lesson-1/</link>
      <pubDate>Wed, 10 Feb 2016 21:13:59 +0000</pubDate>
      
      <guid>https://drkbl.com/posts/lxf-lesson-1/</guid>
      <description>浏览器对象 1. window window对象首先是全局作用域。 window对象有 innerWidth 和 innerHeight 可以获取浏览器窗口的内部宽度和高度。内部宽高是指除去菜单栏、工具栏、边框等占位元素后，用于显示网页的净宽高。
2. navigator navigator对象表示浏览器的信息
 navigator.appName：浏览器名称； navigator.appVersion：浏览器版本； navigator.language：浏览器设置的语言； navigator.platform：操作系统类型； navigator.userAgent：浏览器设定的User-Agent字符串。  {0} 3. screen
 screen.width：屏幕宽度，以像素为单位； screen.height：屏幕高度，以像素为单位； screen.colorDepth：返回颜色位数，如8、16、24。  4. location location对象表示当前页面的URL信息
  location.href : http://www.example.com:8080/path/index.html?a=1&amp;amp;b=2#TOP
  location.protocol; // &amp;lsquo;http&amp;rsquo;
  location.host; // &amp;lsquo;www.example.com&#39;
  location.port; // &amp;lsquo;8080&amp;rsquo;
  location.pathname; // &amp;lsquo;/path/index.html&amp;rsquo;
  location.search; // &amp;lsquo;?a=1&amp;amp;b=2&amp;rsquo;
  location.hash; // &amp;lsquo;TOP&amp;rsquo;
  也可以通过操作location对象进行跳转或刷新
 location.reload(); // 刷新 location.</description>
    </item>
    
  </channel>
</rss>